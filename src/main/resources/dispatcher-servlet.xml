<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
   xmlns:context="http://www.springframework.org/schema/context"
   xmlns:mvc="http://www.springframework.org/schema/mvc"
   xsi:schemaLocation="
        http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context-4.0.xsd
        http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd"
   default-lazy-init="true">

   <!-- 加载配置文件 -->
   <context:property-placeholder location="classpath*:config.properties" />

   <!-- 对包中的类进行扫描，以完成 Web 相关的 Bean 创建和自动注入 -->
   <context:component-scan base-package="com.test" use-default-filters="false">
      <context:include-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
   </context:component-scan>

   <!-- Activates annotation-based bean configuration -->
   <context:annotation-config />

   <!-- 先找本地servlet，找不到再找指定的dispatcher -->
   <mvc:default-servlet-handler />

   <bean id="messageSource" class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
      <property name="basename" value="classpath:messages" />
      <property name="fileEncodings" value="utf-8" />
      <property name="cacheSeconds" value="3600" />
   </bean>

   <mvc:annotation-driven>
      <mvc:message-converters>
         <!-- 定制 JSON 消息转换器，尽量和 JsonUtil 使用的 jackson 配置一致 -->
         <bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
            <property name="objectMapper">
               <bean class="com.fasterxml.jackson.databind.ObjectMapper">
                  <property name="timeZone">
                     <bean class="java.util.TimeZone" factory-method="getDefault" />
                  </property>
               </bean>
            </property>
            <property name="supportedMediaTypes">
               <list>
                  <!-- 由于在Controller中需要接收String格式的请求数据，当Content-type为text/html时，不将请求数据进行JSON反序列化，因此在此不设置text/html -->
                  <!--<value>text/html;charset=UTF-8</value>-->
                  <value>application/json;charset=UTF-8</value>
               </list>
            </property>
         </bean>
      </mvc:message-converters>
   </mvc:annotation-driven>

   <!-- 配置基于Session的处理,将提交上来的locale参数进行处理 -->
   <bean id="localeResolver" class="org.springframework.web.servlet.i18n.SessionLocaleResolver">
      <!-- 该属性可以不用配置 -->
      <property name="defaultLocale" value="zh" />
   </bean>

   <!-- 国际化请求拦截器处理 -->
   <mvc:interceptors>
      <bean class="org.springframework.web.servlet.i18n.LocaleChangeInterceptor">
         <property name="paramName" value="locale" />
      </bean>
   </mvc:interceptors>
</beans>